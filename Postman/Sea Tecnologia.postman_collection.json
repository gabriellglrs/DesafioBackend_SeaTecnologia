{
	"info": {
		"_postman_id": "4e604aac-7f61-40a3-8caf-afd8f983b085",
		"name": "Sea Tecnologia",
		"description": "Execução do Projeto --------------------------------------------------------------\n\n- Rode o projeto com o comando `mvn spring-boot:run` ou diretamente na IDE.\n    \n- Certifique-se de que os endpoints estejam acessíveis pela porta configurada no arquivo `application.properties` (por padrão, `localhost:8080/api`).\n    \n\nTestar os Endpoints ----------------------------------------------------------------\n\n- Faça primeiro o login no endpoint POST `/login` para obter o token de autenticação\n    \n- Adicione o token no cabeçalho das requisições (`Authorization: Bearer` )\n    \n\n**Acessar os Endpoints Disponíveis** -------------------------------------------------\n\n- User\n    \n- `POST /create-ADMIN` → Criar usuário administrador\n    \n- `GET /findById-USER/ADMIN` → Buscar usuário por ID\n    \n- `GET /findAll-ADMIN` → Listar todos os usuários.\n    \n- `GET /findAll-ADMIN` → Listar todos os usuários.\n    \n- `DELETE /delete-ADMIN` → Excluir usuário.\n    \n- Products\n    \n- `POST /create-ADMIN` → Criar produto.\n    \n- `GET /findById-USER/ADMIN` → Buscar produto por ID.\n    \n- `GET /findAll-USER/ADMIN` → Listar todos os produtos.\n    \n- `PUT /update-ADMIN` → Atualizar produto.\n    \n- `DELETE /delete-ADMIN` → Excluir produto.\n    \n\nAmbiente de Desenvolvimento -----------------------------------------------------\n\n- Certifique-se de configurar corretamente as variáveis de ambiente (host, username, password, etc.) e de rodar o banco de dados antes de iniciar o projeto.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33185305"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code >= 200 && responseCode.code < 300) {\r",
									"    var json = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable('token', json.access_token);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client-secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client-id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{grant-type}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/oauth2/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"description": "Criar Usuários para Login\n\n- Para acessar os endpoints, é necessário autenticar com um dos usuários pré-definidos abaixo:\n    \n\n**Administrador**:\n\n- **Username**: `00000000000`\n    \n- **Password**: `123qwe!@#`\n    \n\n**Usuário Comum**:\n\n- **Username**: `11111111111`\n    \n- **Password**: `123qwe123`\n    \n\n#### Pode mudar Variables e ja fazer login, nao esquecer de importar o arquivo Environments\n\n<img src=\"https://content.pstmn.io/8df29e24-ae02-448d-8bd4-7dc72a2e85f2/aW1hZ2UucG5n\" alt=\"\" height=\"509\" width=\"421\">"
		},
		{
			"name": "Endpoints",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "create-ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Lucas\",\r\n    \"cpf\": \"15013140684\",\r\n    \"password\": \"Azul@#$2003\",\r\n    \"address\": {\r\n        \"cep\": \"71692-448\",\r\n        \"logradouro\": \"Rua Exemplo\",\r\n        \"bairro\": \"Centro\",\r\n        \"cidade\": \"São Paulo\",\r\n        \"uf\": \"SP\",\r\n        \"complemento\": \"Apto 101\"\r\n    },\r\n    \"phones\": [\r\n        {\r\n            \"numero\": \"12343278244\",\r\n            \"phoneType\": \"CELULAR\"\r\n        }\r\n    ],\r\n    \"emails\": [\r\n        {\r\n            \"email\": \"reserva@gmail.com\"\r\n        },\r\n        {\r\n            \"email\": \"raaaaaaaa@gmail.com\"\r\n        }\r\n    ],\r\n    \"roles\": [\r\n        {\r\n            \"id\": 2\r\n        }\r\n        \r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "findById-USER/ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "findAll - ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "update - ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Lucas\",\r\n    \"cpf\": \"15013140684\",\r\n    \"password\": \"Azul@#$2003\",\r\n    \"address\": {\r\n        \"cep\": \"71692-448\",\r\n        \"logradouro\": \"Rua Exemplo\",\r\n        \"bairro\": \"Centro\",\r\n        \"cidade\": \"São Paulo\",\r\n        \"uf\": \"SP\",\r\n        \"complemento\": \"Apto 101\"\r\n    },\r\n    \"phones\": [\r\n        {\r\n            \"numero\": \"12343278244\",\r\n            \"phoneType\": \"CELULAR\"\r\n        }\r\n    ],\r\n    \"emails\": [\r\n        {\r\n            \"email\": \"reserva@gmail.com\"\r\n        },\r\n        {\r\n            \"email\": \"raaaaaaaa@gmail.com\"\r\n        }\r\n    ],\r\n    \"roles\": [\r\n        {\r\n            \"id\": 2\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete - ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/users/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"4"
									]
								}
							},
							"response": []
						}
					],
					"description": "Execução do Projeto --------------------------------------------------------------\n\n- Rode o projeto com o comando `mvn spring-boot:run` ou diretamente na IDE.\n    \n- Certifique-se de que os endpoints estejam acessíveis pela porta configurada no arquivo `application.properties` (por padrão, `localhost:8080/api`).\n    \n\nTestar os Endpoints ----------------------------------------------------------------\n\n- Faça primeiro o login no endpoint POST `/login` para obter o token de autenticação\n    \n- Adicione o token no cabeçalho das requisições (`Authorization: Bearer` )\n    \n\n**Acessar os Endpoints Disponíveis** -------------------------------------------------\n\n- User\n    \n- `POST /create-ADMIN` → Criar usuário administrador\n    \n- `GET /findById-USER/ADMIN` → Buscar usuário por ID\n    \n- `GET /findAll-ADMIN` → Listar todos os usuários.\n    \n- `GET /findAll-ADMIN` → Listar todos os usuários.\n    \n- `DELETE /delete-ADMIN` → Excluir usuário.\n    \n- Products\n    \n- `POST /create-ADMIN` → Criar produto.\n    \n- `GET /findById-USER/ADMIN` → Buscar produto por ID.\n    \n- `GET /findAll-USER/ADMIN` → Listar todos os produtos.\n    \n- `PUT /update-ADMIN` → Atualizar produto.\n    \n- `DELETE /delete-ADMIN` → Excluir produto.\n    \n\nAmbiente de Desenvolvimento -----------------------------------------------------\n\n- Certifique-se de configurar corretamente as variáveis de ambiente (host, username, password, etc.) e de rodar o banco de dados antes de iniciar o projeto."
				},
				{
					"name": "Products",
					"item": [
						{
							"name": "create-ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Smartphone Samsung Galaxy A54\",\r\n    \"description\": \"Smartphone com tela Super AMOLED 6.4\\\", 128GB de armazenamento, 8GB RAM, câmera tripla 50MP\",\r\n    \"price\": 1799.9\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "findById-USER/ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/products/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"products",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "findAll-USER/ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "update - ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Sm\",\r\n    \"description\": \"Smartphone com tela Super AMOLED 6.4\\\", 128GB de armazenamento, 8GB RAM, câmera tripla 50MP\",\r\n    \"price\": 1799.9\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/products/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"products",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete - ADMIN",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/products/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"products",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"description": "Execução do Projeto --------------------------------------------------------------\n\n- Rode o projeto com o comando `mvn spring-boot:run` ou diretamente na IDE.\n    \n- Certifique-se de que os endpoints estejam acessíveis pela porta configurada no arquivo `application.properties` (por padrão, `localhost:8080/api`).\n    \n\nTestar os Endpoints ----------------------------------------------------------------\n\n- Faça primeiro o login no endpoint POST `/login` para obter o token de autenticação\n    \n- Adicione o token no cabeçalho das requisições (`Authorization: Bearer` )\n    \n\n**Acessar os Endpoints Disponíveis** -------------------------------------------------\n\n- User\n    \n- `POST /create-ADMIN` → Criar usuário administrador\n    \n- `GET /findById-USER/ADMIN` → Buscar usuário por ID\n    \n- `GET /findAll-ADMIN` → Listar todos os usuários.\n    \n- `GET /findAll-ADMIN` → Listar todos os usuários.\n    \n- `DELETE /delete-ADMIN` → Excluir usuário.\n    \n- Products\n    \n- `POST /create-ADMIN` → Criar produto.\n    \n- `GET /findById-USER/ADMIN` → Buscar produto por ID.\n    \n- `GET /findAll-USER/ADMIN` → Listar todos os produtos.\n    \n- `PUT /update-ADMIN` → Atualizar produto.\n    \n- `DELETE /delete-ADMIN` → Excluir produto.\n    \n\nAmbiente de Desenvolvimento -----------------------------------------------------\n\n- Certifique-se de configurar corretamente as variáveis de ambiente (host, username, password, etc.) e de rodar o banco de dados antes de iniciar o projeto."
				}
			],
			"description": "Execução do Projeto --------------------------------------------------------------\n\n- Rode o projeto com o comando `mvn spring-boot:run` ou diretamente na IDE.\n    \n- Certifique-se de que os endpoints estejam acessíveis pela porta configurada no arquivo `application.properties` (por padrão, `localhost:8080/api`).\n    \n\nTestar os Endpoints ----------------------------------------------------------------\n\n- Faça primeiro o login no endpoint POST `/login` para obter o token de autenticação\n    \n- Adicione o token no cabeçalho das requisições (`Authorization: Bearer` )\n    \n\n**Acessar os Endpoints Disponíveis** -------------------------------------------------\n\n- User\n    \n- `POST /create-ADMIN` → Criar usuário administrador\n    \n- `GET /findById-USER/ADMIN` → Buscar usuário por ID\n    \n- `GET /findAll-ADMIN` → Listar todos os usuários.\n    \n- `GET /findAll-ADMIN` → Listar todos os usuários.\n    \n- `DELETE /delete-ADMIN` → Excluir usuário.\n    \n- Products\n    \n- `POST /create-ADMIN` → Criar produto.\n    \n- `GET /findById-USER/ADMIN` → Buscar produto por ID.\n    \n- `GET /findAll-USER/ADMIN` → Listar todos os produtos.\n    \n- `PUT /update-ADMIN` → Atualizar produto.\n    \n- `DELETE /delete-ADMIN` → Excluir produto.\n    \n\nAmbiente de Desenvolvimento -----------------------------------------------------\n\n- Certifique-se de configurar corretamente as variáveis de ambiente (host, username, password, etc.) e de rodar o banco de dados antes de iniciar o projeto."
		}
	]
}